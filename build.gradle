plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'groovy'
    id 'jacoco'
}


sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl {
        extendsFrom compileClasspath
    }
}

ext {
    set('elasticsearch.version', '7.6.0')
    ext {
        lombokVersion = '1.18.6'
    }
}
test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "PASSED", "STARTED", "FAILED"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/exception/**',
                              '**/model/**',
                              '**/**/*Configuration*'
                    ]
            )
        }))
    }
}

repositories {
    maven {
        url 'https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee'
        credentials {
            username System.properties.getProperty("username")
            password System.properties.getProperty("password")
        }
    }
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
    mavenLocal()
    jcenter()
}
dependencyManagement {
    imports {
        mavenBom 'org.camunda.bpm:camunda-bom:7.13.0-ee'
    }
}


dependencies {
    compile group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-webapp-ee', version: '7.13.0-ee'
    compile group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.camunda.bpm.extension', name: 'camunda-bpm-identity-keycloak', version: '1.5.0'

    compile('org.camunda.spin:camunda-spin-dataformat-json-jackson')
    compile('org.camunda.bpm:camunda-engine-plugin-spin')
    compile('org.camunda.bpm:camunda-engine-plugin-connect')
    compile('org.camunda.connect:camunda-connect-connectors-all:1.0.7')
    compile('org.camunda.connect:camunda-connect-core:1.4.0')
    compile('org.camunda.spin:camunda-spin-core:1.9.0')
    compile('org.camunda.spin:camunda-spin-dataformat-all:1.9.0')
    compile('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:7.13.0-ee')

    compile('org.springframework.boot:spring-boot-starter-data-jdbc')

    implementation 'org.codehaus.groovy:groovy-all:2.5.10'
    implementation('uk.gov.service.notify:notifications-java-client:3.8.0-RELEASE')

    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation group: 'org.springframework.session', name: 'spring-session-data-redis', version: '2.3.0.RELEASE'
    implementation group: 'org.springframework.session', name: 'spring-session-core', version: '2.3.0.RELEASE'

    implementation 'org.springframework.cloud:spring-cloud-context:2.2.2.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.2.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server:5.3.3.RELEASE'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.3.3.RELEASE'

    implementation 'org.json:json:20190722'
    implementation 'javax.activation:javax.activation-api:1.2.0'

    implementation 'org.springdoc:springdoc-openapi-ui:1.3.4'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.3.4'
    implementation 'org.springdoc:springdoc-openapi-security:1.3.4'
    implementation 'org.postgresql:postgresql:42.2.10'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'

    implementation 'org.apache.httpcomponents:httpclient:4.5.12'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.779'
    implementation 'com.amazonaws:aws-java-sdk-ses:1.11.779'
    implementation 'com.amazonaws:aws-java-sdk-core:1.11.779'
    implementation 'com.amazonaws:aws-java-sdk-sns:1.11.779'
    implementation 'javax.mail:javax.mail-api:1.6.2'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    implementation 'io.digitalpatterns:camunda-process-variable-encryption:1.6.Final'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.6.2'
    implementation 'org.elasticsearch:elasticsearch:7.6.2'
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.6.2'
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'
    implementation 'org.springframework:spring-aspects:5.2.8.RELEASE'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok:1.18.12',
            "com.querydsl:querydsl-apt:4.2.2:jpa",
            'javax.annotation:javax.annotation-api:1.3.2',
            'javax.persistence:javax.persistence-api:2.2'
    )
    testImplementation 'org.springframework.security:spring-security-test:5.3.0.RELEASE'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation('com.github.tomjankes:wiremock-groovy:0.2.0'){
        // Flakey build issue where there is no gradle cache:
        // Error: Could not find com.github.jknack.handlebars.java:handlebars:4.1.2
        // These dependencies shouldn't be part of the configuration, because it's not declared in the pom.xml,
        // but somehow Gradle puts it in anyway.
        exclude group: 'com.github.jknack.handlebars.java'
    }

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.springframework.security:spring-security-test:5.3.3.RELEASE') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.springframework.cloud:spring-cloud-starter-contract-stub-runner:2.2.2.RELEASE'){
        // Flakey build issue where there is no gradle cache:
        // Error: Could not find com.github.jknack.handlebars.java:handlebars:4.1.2
        // These dependencies shouldn't be part of the configuration, because it's not declared in the pom.xml,
        // but somehow Gradle puts it in anyway.
        exclude group: 'com.github.jknack.handlebars.java'
    }
    testImplementation 'org.camunda.bpm.assert:camunda-bpm-assert:5.0.0'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation "org.testcontainers:spock:1.14.3"
    testImplementation "org.testcontainers:localstack:1.14.3"
    testImplementation "org.testcontainers:elasticsearch:1.14.3"
}

jacoco {
    toolVersion = "0.8.5"
}

