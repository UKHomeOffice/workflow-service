name: Publish Docker
on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@latest
      - uses: joschi/setup-jdk@v1
        with:
          java-version: 'openjdk14' // The OpenJDK version to make available on the path
          architecture: 'x64' // defaults to 'x64'
          openjdk_impl: 'openj9'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run tests
        run: ./gradlew clean test
      - name: Run tests
        run: ./gradlew clean build
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: build/libs/workflow-service.jar
  package:
    env:
      IMAGE: 'digitalpatterns/workflow-service/workflow-service-master'
      IMAGE_DOCKER_HUB: 'digitalpatterns/workflow-service'
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.IMAGE }}:latest
      - uses: anchore/scan-action@master
        with:
          image-reference: "${{ env.IMAGE }}:latest"
          dockerfile-path: "./Dockerfile"
          fail-build: false
          include-app-packages: true
      - name: anchore inline scan JSON results
        run: cat ./anchore-reports/vulnerabilities.json;
      - name: Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ env.IMAGE }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
          cache: true
          registry: docker.pkg.github.com
          snapshot: true
          tags: "latest, ${{ github.sha }}"
      - name: Publish to Docker Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ env.IMAGE_DOCKER_HUB }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          cache: true
          snapshot: true
          tags: "latest"
      - uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Github # default: 8398a7@action-slack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
